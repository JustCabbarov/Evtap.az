// <auto-generated />
using System;
using EvTap.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EvTap.Persistence.Migrations.ScrapingDb
{
    [DbContext(typeof(ScrapingDbContext))]
    [Migration("20250912110757_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EvTap.Domain.Entities.ScrapingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("Area")
                        .HasColumnType("double precision");

                    b.Property<string>("AreaUnit")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Featured")
                        .HasColumnType("boolean");

                    b.Property<int?>("Floor")
                        .HasColumnType("integer");

                    b.Property<bool?>("HasBillOfSale")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasMortgage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasRepair")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Leased")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Rooms")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalFloors")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("Vipped")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ScrapingDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
